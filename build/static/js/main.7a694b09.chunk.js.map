{"version":3,"sources":["services/persons.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","App","useState","persons","setPersons","newName","setNewName","newNumber","setNewNumber","newSearch","setNewSearch","showAll","setShowAll","notificationMessage","setNotificationMessage","useEffect","personService","initialPersons","Notification","message","style","color","fontStyle","fontSize","borderStyle","padding","background","namesToShow","filter","person","name","toUpperCase","includes","handleSearchChange","event","length","target","value","addInfo","preventDefault","nameObject","number","nimet","map","numerot","console","log","window","confirm","index","indexOf","returnedPerson","n","concat","setTimeout","catch","error","alert","handleNameChange","handleNumberChange","deletePerson","Persons","Person","onClick","PersonForm","onSubmit","onChange","type","Filter","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7a694b09.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl='/api/persons'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n  }\n  \n  const create = newObject => {\n    const request = axios.post(baseUrl, newObject)\n    return request.then(response => response.data)\n  }\n  \n  const update = (id, newObject) => {\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\n    return request.then(response => response.data)\n  }\n\n  const deletingPerson = (id)=>{\n      const request=axios.delete(`${baseUrl}/${id}`)\n      return request.then(response=>response.data)\n      \n  }\n  \n  export default{getAll, create,update,deletingPerson}","import React, { useState, useEffect } from 'react'\nimport ReactDOM from 'react-dom'\nimport personService from './services/persons'\n\nconst App = () => {\n  const [ persons, setPersons] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [newNumber, setNewNumber]=useState('')\n  const [newSearch, setNewSearch]=useState('')\n  const [showAll, setShowAll]=useState(true)\n  const [notificationMessage, setNotificationMessage]=useState(null)\n\n  useEffect(()=>{\n    personService\n    .getAll()\n    .then(initialPersons=>{\n        setPersons(initialPersons)\n    })\n  },[])\n\n  const deletePerson=({id,name})=>{\n    \n    \n    if (window.confirm(`Delete ${name} from phonebook?`)) {\n      setNotificationMessage(\n        `${name} is now deleted from phonebook`\n      )\n      setTimeout(()=>{\n        setNotificationMessage(null)\n      },5000)\n      personService\n        .deletingPerson(id)\n        .then=()=>{\n          setPersons(persons.filter(n=>n.id!==id))\n          setNewName('')\n          setNewNumber('')\n        }\n    }\n  }\n\n  const Notification = ({ message })=>{\n    const notificationStyle ={\n      color:'red',\n      fontStyle:'italic',\n      fontSize:20,\n      borderStyle:'solid',\n      padding:10,\n      background:'lightgrey'\n    }\n    if (message===null){\n        return null\n    }\n    return (\n        <div style={notificationStyle}>\n            {message}\n        </div>\n    )\n}\n\n  const handleNumberChange=(event)=>{\n    setNewNumber(event.target.value)\n  }\n\n  const handleNameChange =(event)=>{\n    //console.log(event.target.value)\n    setNewName(event.target.value)\n  }\n\n  const addInfo= (event)=>{\n    event.preventDefault()\n    const nameObject={\n      name: newName,\n      number:newNumber\n    }\n\n    const nimet =persons.map(person=>person.name)\n    const numerot=persons.map(person=>person.number)\n    console.log(nimet)\n    console.log(numerot)\n\n    if (nimet.includes(newName)){\n      \n      if (window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) {\n        const index= nimet.indexOf(newName)\n        //console.log(index)\n        const id= persons[index].id\n        //console.log(\"Id on\" + id)\n\n        personService\n          .update(id, nameObject)\n          .then(returnedPerson=>{\n            setPersons(persons.filter(n=>n.id!==id))\n            setPersons(persons.concat(returnedPerson))\n            setNewName('')\n            setNewNumber('')\n            setNotificationMessage(\n              `${newName} is now updated`\n              )\n            setTimeout(()=>{\n              setNotificationMessage(null)\n            },5000)\n          })\n          .catch(error=>{\n              setNotificationMessage(error.response.data.error)\n              setTimeout(()=>{\n                setNotificationMessage(null)\n              },5000)\n      \n            \n          })\n            \n      }\n          \n\n        \n    }\n    \n    else if (numerot.includes(newNumber)){\n      alert(`Phone number ${newNumber} is already in use`)\n    }\n\n    else {\n\n\n      personService\n        .create(nameObject)\n        .then(returnedPerson=>{\n          setPersons(persons.concat(returnedPerson))\n          setNewName('')\n          setNewNumber('')\n    })\n        .catch(error=>{\n          console.log(error.response.data.error)\n        setNotificationMessage(error.response.data.error)\n        setTimeout(()=>{\n          setNotificationMessage(null)\n        },5000)\n\n    \n  })\n      setNotificationMessage(\n      `${newName} is now added`\n      )\n      setTimeout(()=>{\n      setNotificationMessage(null)\n      },5000)\n\n    }\n\n  }\n\n  const handleSearchChange = (event)=>{\n    if(newSearch.length===0){\n      setShowAll(true)\n    }if(newSearch.length>0){\n      setShowAll(false)\n    }\n    setNewSearch(event.target.value)\n  }\n\n  const namesToShow = showAll\n    ? persons\n    : persons.filter(person=>person.name.toUpperCase().includes(newSearch.toUpperCase()))\n\n\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n\n      <Notification message={notificationMessage}/>\n        \n      <Filter \n      newSearch={newSearch}\n      handleSearchChange={handleSearchChange}\n      />\n\n      <h3>add a new</h3>\n      <PersonForm\n      addInfo={addInfo}\n      newName={newName}\n      handleNameChange={handleNameChange}\n      newNumber={newNumber}\n      handleNumberChange={handleNumberChange}\n      \n      />\n      \n\n      <h3>Numbers</h3>\n      <Persons \n      namesToShow={namesToShow}\n      persons={persons}\n      deletePerson={deletePerson}\n      \n      />\n      \n    </div>\n  )\n\n}\n\nconst Persons=({namesToShow,deletePerson})=>{\n  return(\n    <div>\n  {namesToShow.map(person=>\n  <Person \n    key={person.id}\n    person={person}\n    deletePerson={()=>deletePerson(person)}\n      />\n  )}\n  \n  </div>\n  )\n}\n\n\nconst Person=({person, deletePerson})=>{\n  //console.log(\"person komponentissa tulostuuko id: \"+person.id +\" ja nimi: \" + person.name)\n  \n  return(\n    <li>\n      {person.name} {person.number}\n      <button onClick={deletePerson} id={person.id} name={person.name}>delete</button>\n      </li>\n  )\n}\n\nconst PersonForm=({addInfo, newName, handleNameChange,newNumber,handleNumberChange})=>{\n  return(\n    <form onSubmit={addInfo}>\n        <div>\n          name: <input \n          value={newName}\n          onChange={handleNameChange} />\n        </div>\n        <div>\n          number: <input\n          value={newNumber}\n          onChange={handleNumberChange} />\n        </div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n\n  )\n}\n\nconst Filter=({newSearch, handleSearchChange})=>{\n  return(\n    <div>\n          filer shown with <input\n          value={newSearch}\n          onChange={handleSearchChange}/>\n        </div>\n  )\n}\n\n\n\nReactDOM.render(\n  <App/>,\n  document.getElementById('root')\n)\n\nexport default App"],"sourceRoot":""}